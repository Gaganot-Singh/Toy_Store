<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    <link rel="stylesheet" href="/css/main.css" />
    <title>About</title>
</head>
<body>
    <nav>
        <%- include('partials/navbar', {page: '/about'}) %>
    </nav>
        <div class="container mx-auto p-4">
            <div class="hero bg-base-200 rounded-lg p-6">
              <div class="hero-content text-center ">
                <div class="max-w-md">
                  <h1 class="text-5xl font-bold">ABOUT</h1>
                 
                </div>
            </div>
        </div>
        
        <main>
            <section>
                <h2>EJS Template Engine Integration</h2>
                <p>The project utilizes the EJS (Embedded JavaScript) template engine to dynamically render data from a Postgres database. This allows for flexible and efficient generation of HTML content based on the data retrieved from the database.</p>
            </section>
            <section>
                <h2>Random Quote Feature</h2>
                <p>Integration of the 'Quotable' API provides a random quote feature within the project. This adds a dynamic and engaging element to the application, enhancing user experience.</p>
            </section>
            <section>
                <h2>Partial Views for Common HTML Elements</h2>
                <p>Partial views are implemented for common HTML elements like the navbar. This promotes code reusability and maintainability by encapsulating commonly used components into separate files that can be included wherever needed.</p>
            </section>
            <section>
                <h2>Data Rendering with EJS and Table Display</h2>
                <p>Data sets, including toy data fetched from a Postgres database, are rendered using the EJS template engine. Additionally, a table is incorporated to effectively display the toy data, providing users with a structured and organized view of the information.</p>
            </section>
            <section>
                <h2>Functionality for Creating, Updating, and Deleting Lego Sets</h2>
                <p>The project includes functionality for managing Lego sets, allowing users to create, update, and delete sets as needed. This CRUD (Create, Read, Update, Delete) functionality enhances the application's utility and interactivity.</p>
            </section>
            <section>
                <h2>User Account Management with MongoDB Atlas</h2>
                <p>MongoDB Atlas is integrated for user authentication and sessions. This provides a secure and scalable solution for managing user accounts and ensuring user data privacy.</p>
            </section>
            <section>
                <h2>Login History Functionality</h2>
                <p>The project implements login history functionality to track user logins. This feature enhances security and accountability by maintaining a record of user login activities.</p>
            </section>
            <section>
                <h2>Utilization of Tailwind CSS with DaisyUI Plugin</h2>
                <p>Tailwind CSS framework, along with the DaisyUI plugin, is utilized for designing a responsive and visually appealing user interface. This ensures that the application is aesthetically pleasing and accessible across various devices and screen sizes.</p>
            </section>
        </main>
    </div>
</body>
</html>
